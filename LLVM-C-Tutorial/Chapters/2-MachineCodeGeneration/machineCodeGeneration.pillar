!!Machine Code Generation

!!!==Triple==s, ==Target==s and ==TargetMachine==s
In the last chapter we generated the bitcode for the host machine. How can we
specify the machine we want to generate code for (and by code I mean machine code)?
This idea would use the main strength of LLVM, with one IR we can generate any
specified machine code. Now that we have the IR ready by creating it last chapter,
how can we specify the architecture we want to deploy it on?

In order to answer this issue, LLVM uses a ==Target==/==TargetMachine== double
representation of any architecture and a ==Triple== as a textual descriptor of
the architecture, vendor and operating system.

Basically, ==Triple==s are helpers for configuration. Their names come from the
fact that they used to contain only three fields and are strings in the canonical
form of:
ARCHITECTURE - VENDOR - OPERATING SYSTEM (- ENVIRONMENT)

If some of the fields are not specified, the default ones will be used. The list
of all the architectures, vendors, operating systems and environments can be found
under: https://llvm.org/doxygen/classllvm_1_1Triple.html#details.
